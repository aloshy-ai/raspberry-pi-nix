name: CI Build

on:
  push:
    branches:
      - '**'  # Triggers on all branches
  workflow_dispatch:  # Allows manual triggering

jobs:
  build-sd-image:
    runs-on: ubuntu-latest
    timeout-minutes: 120

    steps:
      # Step 1: Checkout
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Step 2: Setup swap space
      - name: Setup swap space
        run: |
          # Create a 16GB swap file
          sudo fallocate -l 16G /swapfile
          sudo chmod 600 /swapfile
          sudo mkswap /swapfile
          sudo swapon /swapfile

      # Step 3: QEMU Setup
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      # Step 4: Nix Setup
      - name: Setup Nix
        uses: cachix/install-nix-action@v20
        with:
          nix_path: nixpkgs=/nix/var/nix/profiles/per-user/root/channels/nixpkgs
          extra_nix_config: |
            experimental-features = nix-command flakes
            system-features = big-parallel kvm nixos-test benchmark
            extra-platforms = aarch64-linux
            max-jobs = 4
            cores = 2
            sandbox = false

      # Step 5: Build Process
      - name: Build SD Image
        run: |
          free -h
          nix build \
            --option system aarch64-linux \
            --option extra-system-features "big-parallel" \
            --option system-features "big-parallel kvm nixos-test benchmark" \
            --no-update-lock-file \
            '.#nixosConfigurations.rpi-example.config.system.build.sdImage'
          mkdir -p artifacts
          sudo cp -r -L /nix/store/*nixos-sd-image-*.img artifacts/

      # Step 6: Artifact Upload
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: sd-image-${{ github.sha }}
          path: |
            artifacts/*nixos-sd-image-*.img
